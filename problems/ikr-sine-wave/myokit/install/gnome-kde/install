#!/usr/bin/env python2
#
# Installs GNOME desktop items for myokit and the myokit datablock viewer into
# the user home directory, adds a mime-type file for .mmt files (again in the
# user dir) and reloads the mime-type database.
#
# This file is part of Myokit
#  Copyright 2011-2017 Maastricht University
#  Licensed under the GNU General Public License v3.0
#  See: http://myokit.org
#
# Authors:
#  Michael Clerx
#
from __future__ import print_function
import os
import sys
import shutil
# Data dir
DIR_DATA = 'files'
# Command line explanation
HELP = """
Installs GNOME/KDE features.
----------------------------
Options:
  desktop
    Adds .desktop files to the current user's home directory, making Myokit
    applications show up in the menu on GNOME/KDE systems.
  mime
    Adds a mime-type file for .mmt and other files to the current user's home
    directory so that they will be recognised by the system.
  gtksourceview
    Adds a Myokit syntax-highlighting file for gtksourceview, which provides
    highlighting to GTK+ applications such as Gedit.
  all
    Install all options listed above.
"""
# Parse arguments
choices = set(sys.argv[1:])
if not choices:
    print(HELP)
    sys.exit()
options = set(['desktop', 'mime', 'gtksourceview', 'all'])
unknown = choices - options
if unknown:
    if len(unknown) == 1:
        print('Unknown option: ' + unknown.pop())
    else:
        print('Unknown options: ' + ', '.join(unknown))
    sys.exit(1)
if 'all' in choices:
    choices = options - set(['all'])
# Get user home dir
home = os.path.expanduser('~')
# Copies file and creates directory structure
def place_file(path, name):
    print('Placing ' + str(name) + ' in ' + str(path))
    orig = os.path.join(DIR_DATA, name)
    dest = os.path.join(path, name)
    if not os.path.exists(orig):
        print('Error: file not found ' + orig)
        sys.exit(1)
    if os.path.exists(path):
        if not os.path.isdir(path):
            print('Error: Cannot create output directory. A file exists at '
                + path)
            sys.exit(1)
    else:
        print('  Creating directory structure: ' + path)
        os.makedirs(path)
    shutil.copyfile(orig, dest)
# Desktop files
if 'desktop' in choices:
    print('Installing desktop files...')
    path = os.path.join(home, '.local', 'share', 'applications')
    place_file(path, 'myokit-ide.desktop')
    place_file(path, 'myokit-datalog-viewer.desktop')
    place_file(path, 'myokit-datablock-viewer.desktop')
    place_file(path, 'myokit-gde.desktop')
# Mime-type file
if 'mime' in choices:
    print('Installing mmt mime-type...')
    path = os.path.join(home, '.local', 'share', 'mime', 'packages')
    name = 'x-myokit.xml'
    place_file(path, name)
    print('Installing gde mime-type...')
    path = os.path.join(home, '.local', 'share', 'mime', 'packages')
    name = 'x-gde.xml'
    place_file(path, name)
    print('Installing abf mime-type...')
    path = os.path.join(home, '.local', 'share', 'mime', 'packages')
    name = 'x-abf.xml'
    place_file(path, name)
    print('Installing wcp mime-type...')
    path = os.path.join(home, '.local', 'share', 'mime', 'packages')
    name = 'x-wcp.xml'
    place_file(path, name)
    # Reload mime database
    print('Reloading mime database')
    path = home + '/.local/share/mime/'
    from subprocess import call
    call(['update-mime-database', path])
# GtkSourceView file
if 'gtksourceview' in choices:
    print('Installing gtksourceview file...')
    path = os.path.join(home, '.local', 'share', 'gtksourceview-3.0', 
        'language-specs')
    name = 'myokit.lang'
    place_file(path, name)
# Done
print('Done!')

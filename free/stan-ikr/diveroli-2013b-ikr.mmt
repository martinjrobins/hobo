[[model]]
name: DiVeroli2013bIKr
author: Michael Clerx
# Initial values
ikr.IC2 = 0
ikr.C2 = 0.99
ikr.IC1 = 0
ikr.C1 = 0.01
ikr.I = 0
ikr.O = 0

#
# Simulation engine variables
#
[engine]
time = 0 bind time
pace = 0 bind pace

#
# Membrane potential
#
[membrane]
V = engine.pace
    desc: membane potential
    in [mV]

[nernst]
EK = -85

[ikr]
use membrane.V
dot(IC2) = -IC2 * (a3 + b2     ) + C2  * a2 + IC1 * b3
dot(C2)  = -C2  * (a3 + a2     ) + IC2 * b2 + C1  * b3
dot(IC1) = -IC1 * (a1 + b2 + b3) + IC2 * a3 + C1  * a2 + I * b1
dot(C1)  = -C1  * (a1 + a2 + b3) + C2  * a3 + IC1 * b2 + O * b1
dot(I)   = -I   * (b1 + b2     ) + IC1 * a1 + O   * a2
dot(O)   = -O   * (b1 + a2     ) + C1  * a1 + I   * b2
a1 = p1  * exp(p2  * V)
b1 = p3  * exp(p4  * V)
a2 = p5  * exp(p6  * V)
b2 = p7  * exp(p8  * V)
a3 = p9  * exp(p10 * V)
b3 = p11 * exp(p12 * V)
g = p13
IKr = g * O * (V - nernst.EK)
p1 = 0.00401 [1/ms]
p2 = 0.0263 [1/mV]
p3 = 0.000117 [1/ms]
p4 = -0.0401 [1/mV]
p5 = 0.0556 [1/ms]
p6 = 0.0199 [1/mV]
p7 = 0.0176 [1/ms]
p8 = -0.0274 [1/mV]
p9 = 0.025 [1/ms]
p10 = 0.000124 [1/mV]
p11 = 0.117 [1/ms]
p12 = -0.0420 [1/mV]
p13 = 0.04 [mS/uF]

[[script]]
import matplotlib.pyplot as pl
import myokit
import myokit.pacing as pacing
import numpy as np

#
# Simple IKr test script
#

# Get model
m = get_model()

# Create pacing protocol
v = np.arange(-100, 50 + 10, 10)
p = pacing.steptrain(
        vsteps=v,
        vhold=-80,
        tpre=2000,
        tstep=5000,
        tpost=3000)

d = [
    'engine.time',
    'membrane.V',
    'ikr.IKr',
    ]

# Run simulation
s = myokit.Simulation(m, p)
d = s.run(p.characteristic_time(), log=d)

# Plot data as overlapping steps
d2 = d.npview()
d2 = d2.regularize(0.5)
d2 = d2.fold(10000)
pl.figure()
for k in xrange(len(v)):
    pl.subplot(2,1,1)
    pl.plot(d2.time(), d2['membrane.V', k])
    pl.subplot(2,1,2)
    pl.plot(d2.time(), d2['ikr.IKr', k])
pl.show()

